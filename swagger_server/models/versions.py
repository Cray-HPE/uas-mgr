# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.versions_versions import VersionsVersions  # noqa: F401,E501
from swagger_server import util


class Versions(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, versions: List[VersionsVersions]=None):  # noqa: E501
        """Versions - a model defined in Swagger

        :param versions: The versions of this Versions.  # noqa: E501
        :type versions: List[VersionsVersions]
        """
        self.swagger_types = {
            'versions': List[VersionsVersions]
        }

        self.attribute_map = {
            'versions': 'versions'
        }

        self._versions = versions

    @classmethod
    def from_dict(cls, dikt) -> 'Versions':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Versions of this Versions.  # noqa: E501
        :rtype: Versions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def versions(self) -> List[VersionsVersions]:
        """Gets the versions of this Versions.


        :return: The versions of this Versions.
        :rtype: List[VersionsVersions]
        """
        return self._versions

    @versions.setter
    def versions(self, versions: List[VersionsVersions]):
        """Sets the versions of this Versions.


        :param versions: The versions of this Versions.
        :type versions: List[VersionsVersions]
        """
        if versions is None:
            raise ValueError("Invalid value for `versions`, must not be `None`")  # noqa: E501

        self._versions = versions
