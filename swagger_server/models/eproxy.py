# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class EPROXY(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, username: str=None, cmd: str=None, args: List[str]=None):  # noqa: E501
        """EPROXY - a model defined in Swagger

        :param username: The username of this EPROXY.  # noqa: E501
        :type username: str
        :param cmd: The cmd of this EPROXY.  # noqa: E501
        :type cmd: str
        :param args: The args of this EPROXY.  # noqa: E501
        :type args: List[str]
        """
        self.swagger_types = {
            'username': str,
            'cmd': str,
            'args': List[str]
        }

        self.attribute_map = {
            'username': 'username',
            'cmd': 'cmd',
            'args': 'args'
        }

        self._username = username
        self._cmd = cmd
        self._args = args

    @classmethod
    def from_dict(cls, dikt) -> 'EPROXY':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EPROXY of this EPROXY.  # noqa: E501
        :rtype: EPROXY
        """
        return util.deserialize_model(dikt, cls)

    @property
    def username(self) -> str:
        """Gets the username of this EPROXY.


        :return: The username of this EPROXY.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this EPROXY.


        :param username: The username of this EPROXY.
        :type username: str
        """

        self._username = username

    @property
    def cmd(self) -> str:
        """Gets the cmd of this EPROXY.


        :return: The cmd of this EPROXY.
        :rtype: str
        """
        return self._cmd

    @cmd.setter
    def cmd(self, cmd: str):
        """Sets the cmd of this EPROXY.


        :param cmd: The cmd of this EPROXY.
        :type cmd: str
        """

        self._cmd = cmd

    @property
    def args(self) -> List[str]:
        """Gets the args of this EPROXY.


        :return: The args of this EPROXY.
        :rtype: List[str]
        """
        return self._args

    @args.setter
    def args(self, args: List[str]):
        """Sets the args of this EPROXY.


        :param args: The args of this EPROXY.
        :type args: List[str]
        """

        self._args = args
