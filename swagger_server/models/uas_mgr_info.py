#
# Copyright 2020, Cray Inc.  All Rights Reserved.
#
# coding: utf-8
"""Generated models from the swagger schema

"""

from __future__ import absolute_import

from swagger_server.models.base_model_ import Model
from swagger_server import util


class UASMgrInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(
            self,
            service_name: str = None,
            version: str = None
    ):  # noqa: E501
        """UASMgrInfo - a model defined in Swagger

        :param service_name: The service_name of this UASMgrInfo.  # noqa: E501
        :type service_name: str
        :param version: The version of this UASMgrInfo.  # noqa: E501
        :type version: str
        """
        self.swagger_types = {
            'service_name': str,
            'version': str
        }

        self.attribute_map = {
            'service_name': 'service_name',
            'version': 'version'
        }
        self._service_name = service_name
        self._version = version

    @classmethod
    def from_dict(cls, dikt) -> 'UASMgrInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UAS_mgr_info of this UASMgrInfo.  # noqa: E501
        :rtype: UASMgrInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_name(self) -> str:
        """Gets the service_name of this UASMgrInfo.


        :return: The service_name of this UASMgrInfo.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name: str):
        """Sets the service_name of this UASMgrInfo.


        :param service_name: The service_name of this UASMgrInfo.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def version(self) -> str:
        """Gets the version of this UASMgrInfo.


        :return: The version of this UASMgrInfo.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this UASMgrInfo.


        :param version: The version of this UASMgrInfo.
        :type version: str
        """

        self._version = version
