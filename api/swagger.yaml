openapi: "3.0.2"
info:
  title: "Cray User Access Service"
  description: "Cray User Access Service. This service is responsible for the management of User Access Instance lifecycles."
  version: "0.9.0"
  
servers: 
  - url: "/apis/uas-mgr/v1"

paths:

  /:
  
    get:
      description: "Returns supported UAS API versions"
      operationId: "root_get"
      tags:
      - "Versions"
      - "cli_ignore"
      responses:
        200:
          description: "Version response"
      x-openapi-router-controller: "swagger_server.controllers.versions_controller"
      
  /uas/{username}:
  
    get:
      description: "List all available UAIs for username"
      operationId: "get_uans_for_username"
      tags:
      - "UAS"
      parameters:
      - name: "username"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "List all UAIs for username"
          content:
            application/json:
              schema:
                type: "array"
                items:
                 $ref: "#/components/schemas/UAN"
      x-openapi-router-controller: "swagger_server.controllers.uas_controller"
      
  /uas:
  
    post:
      description: "Create a new UAN for the username"
      operationId: "create_uan"
      tags:
      - "UAS"
      parameters:
      - name: "username"
        in: "query"
        description: "Create UAN for username"
        required: true
        schema: 
          type: "string"
      - name: "imagename"
        in: "query"
        description: "Image to use for UAN"
        required: false
        schema:
          type: "string"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: "object"
              properties:
                usersshpubkey:
                  description: "Public ssh key for the user"
                  type: "string"
                  format: "binary"
      responses:
        201:
          description: "UAN created"
          content:
            application/json:
              schema:
                type: "object"
        404:
          description: "Not able to provide UAN"
          content:
            application/json:
              schema:
                type: "object"
      x-openapi-router-controller: "swagger_server.controllers.uas_controller"
      
    delete:
      description: "Delete UAN with uan_name. Takes a list of UAN names and deletes the associated UAN instances."
      operationId: "delete_uan_by_name"
      tags:
      - "UAS"
      parameters:
      - name: "uan_list"
        description: "comma separated list of UAN names"
        in: "query"
        required: true
        style: form
        explode: false
        schema:
          type: "array"
          items:
            type: "string"
      responses:
        200:
          description: "UANs deleted"
        404:
          description: "Failed to delete UAN with {uan_id}"
      x-openapi-router-controller: "swagger_server.controllers.uas_controller"
      
  /images:
  
    get:
      description: "List available UAS images"
      operationId: "get_uas_images"
      tags:
      - "UAS"
      responses:
        200:
          description: "UAS Image List"
          content:
            application/json:
              schema:
                type: "object"
        404:
          description: "UAS Images not found"
          content:
            application/json:
             schema:
                type: "object"
      x-openapi-router-controller: "swagger_server.controllers.uas_controller"

  /mgr-info:
  
    get:
      description: "List uas-mgr service info"
      operationId: "get_uas_mgr_info"
      tags:
      - "UAS"
      responses:
        200:
          description: "UAS-MGR Info"
          content:
            application/json:
              schema:
                type: "object"
        404:
          description: "UAS-MGR Info not found"
          content:
            application/json:
              schema:
                type: "object"
      x-openapi-router-controller: "swagger_server.controllers.uas_controller"
      
  /uais:
  
    get:
      description: "List all UAIs on the system"
      operationId: "get_all_uais"
      tags:
      - "UAS"
      responses:
        200:
          description: "UAS Instance List"
          content:
            application/json:
              schema:
                type: "object"
        404:
          description: "No UAS Instances found"
          content:
            application/json:
              schema:
                type: "object"
      x-openapi-router-controller: "swagger_server.controllers.uas_controller"
      
    delete:
      tags:
      - "UAS"
      - "cli_danger$This will delete all running UAIs, Are you sure?"
      description: "Delete all UAIs on the system"
      operationId: "delete_all_uais"
      tags:
      - "UAS"
      responses:
        200:
          description: "All UAS Instances Deleted"
        404:
          description: "No UAS Instances found"
      x-openapi-router-controller: "swagger_server.controllers.uas_controller"

components:
  schemas:
    UAN:
      type: "object"
      properties:
        uan_name:
          type: "string"
        username:
          type: "string"
        usersshpubkey:
          type: "string"
        uan_img:
          type: "string"
        uan_ip:
          type: "string"
        uan_status:
          type: "string"
        uan_msg:
          type: "string"
        uan_port:
          type: "string"
        uan_connect_string:
          type: "string"
      example:
        uan_id: "user-uan-uan_image"
        username: "user_name"
        usersshpubkey: "/Users/user/.ssh/id_rsa.pub"
        uan_img: "uan_img"
        uan_ip: "10.248.0.23"
        uan_status: "Running"
        uan_reason: "Deploying"
