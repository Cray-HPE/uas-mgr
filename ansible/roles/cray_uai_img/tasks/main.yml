# Copyright 2020 HPE All Rights Reserved
---

- name: Check if docker image being created already exists
  shell: |
    docker images -q {{ uai_image_name }}
  register: uai_exists
  delegate_to: "{{ groups['bis'][0] }}"
  run_once: true

- name: Set fact for moving UAI images as needed
  set_fact:
    move_uai_img: "{{ uai_exists.stdout | length > 0 }}"

- name: Move the existing UAI image out of the way to make room for a new one
  shell: |
    docker tag {{ uai_image_name }} {{ uai_image_name }}-backup-$(date +'%Y%m%d%H%M%S') && docker rmi {{ uai_image_name }}
  delegate_to: "{{ groups['bis'][0] }}"
  when: move_uai_img
  run_once: true

- name: Transfer get_img_tarball.sh utility
  copy:
    src: get_img_tarball.sh
    dest: /tmp
    mode: 0700
  delegate_to: "{{ groups['bis'][0] }}"
  run_once: true

- name: Get the tarball to build from (could be a BOS session template ID or the CD Repo)
  shell: |
    if [ -z "{{ uas_compute_tar_bos_id }}" ]; then
      find {{ compute_tar_prefix }} -name {{ compute_image_filter }} -type f -print | sort | tail -1
    else
      /tmp/get_img_tarball.sh {{ uas_compute_tar_bos_id }}
    fi
  register: compute_tar_path
  delegate_to: "{{ groups['bis'][0] }}"
  run_once: true

- name: Transfer gen-uai-img.sh utility
  copy:
    src: gen-uai-img.sh
    dest: /tmp
    mode: 0700
  delegate_to: "{{ groups['bis'][0] }}"
  run_once: true

- name: Run gen-uai-img.sh 
  shell: |
    /tmp/gen-uai-img.sh {{ compute_tar_path.stdout }} {{ uai_image_name }}
  register: compute_tar_path
  delegate_to: "{{ groups['bis'][0] }}"
  run_once: true

- name: Remove gen-uai-img.sh utility
  file:
    path: /tmp/gen-uai-img.sh
    state: absent
  delegate_to: "{{ groups['bis'][0] }}"
  run_once: true

- name: Remove get_img_tarball.sh utility
  file:
    path: /tmp/get_img_tarball.sh
    state: absent
  delegate_to: "{{ groups['bis'][0] }}"
  run_once: true
