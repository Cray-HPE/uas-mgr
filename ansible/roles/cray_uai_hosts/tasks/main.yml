# cray-uas-mgr localization ansible play
# Copyright 2019, Cray Inc. All Rights Reserved.
---
- name: Set macvlan bridge facts
  set_fact:
    mac0_list: "{{ mac0_list | default([]) + [ uai_macvlan ] }}"
  loop:
    "{{ groups['uai_hosts'] | sort }}"
  loop_control:
    index_var: cur_host
  run_once: True

- name: Gather river network facts
  set_fact:
    uai_macvlan: "{{ item.subnets | selectattr('label', 'equalto', 'uai_macvlan') | list }}"
    uai_macvlan_network: "{{ item.network }}"
    uai_macvlan_bridge_vlan: "vlan{{ '%03d' | format( item.vlan_id | int ) }}"
  loop: "{{ networks.node_management.blocks.ipv4 | selectattr('label', 'equalto', 'river') | list }}"

- name: Gather mountain network facts
  set_fact:
    uai_macvlan_mtn: "{{ item.subnets | selectattr('label', 'equalto', 'uai_macvlan') | list }}"
  loop: "{{ networks.node_management.blocks.ipv4 | selectattr('label', 'equalto', 'mountain') | list }}"

- name: Set UAI macvlan facts
  set_fact:
    uai_macvlan_bridge_network: "{{ item.network }}"
    uai_macvlan_bridge_gateway: "{{ item.gateway }}"
    uai_macvlan_dhcp_start: "{{ item.dhcp.start }}"
    uai_macvlan_dhcp_end: "{{ item.dhcp.end }}"
    uai_macvlan_bridge_if: "{{ item.macvlan_bridge_if | default( uai_macvlan_bridge_vlan ) }}"
  loop: "{{ uai_macvlan }}"

- name: Set UAI mountain macvlan facts
  set_fact:
    uai_macvlan_mtn_network: "{{ item.network }}"
    uai_macvlan_mtn_gateway: "{{ item.gateway }}"
  loop: "{{ uai_macvlan_mtn }}"

- name: Translate UAI macvlan network attachment definition
  template:
    src: cray-uas-mgr-netattachdef.yaml.j2
    dest: /root/k8s/cray-uas-mgr-netattachdef.yaml
  run_once: True
  delegate_to: "{{ groups['bis']|first }}"

- name: Apply UAI macvlan network attachment definition
  command: kubectl apply -n default -f /root/k8s/cray-uas-mgr-netattachdef.yaml -n "{{ uai_namespace }}"
  register: kubectl_result
  changed_when: kubectl_result.stdout.find('created') != -1 or kubectl_result.stdout.find('configured') != -1
  run_once: True
  delegate_to: "{{ groups['bis']|first }}"

- name: Ensure /opt/cray/uas dir exists
  file:
    path: /opt/cray/uas
    state: directory

- name: Translate macvlan bridge setup script for UAI hosts
  template:
    src: macvlan-bridge-setup.sh.j2
    dest: /opt/cray/uas/macvlan-bridge-setup.sh
    mode: 0544
  loop:
    "{{ mac0_list }}"
  when: inventory_hostname == item.uai_host
  delegate_to: "{{ inventory_hostname }}"

- name: Setup macvlan bridge systemd service on UAI hosts
  copy:
    src: macvlan-bridge-setup.service
    dest: /etc/systemd/system/macvlan-bridge-setup.service
    mode: 0644
  loop:
    "{{ mac0_list }}"
  when: inventory_hostname == item.uai_host
  delegate_to: "{{ inventory_hostname }}"

- name: Translate macvlan bridge teardown script for UAI hosts
  template:
    src: macvlan-bridge-teardown.sh.j2
    dest: /opt/cray/uas/macvlan-bridge-teardown.sh
    mode: 0544
  loop:
    "{{ mac0_list }}"
  when: inventory_hostname == item.uai_host
  delegate_to: "{{ inventory_hostname }}"

- name: Enable and restart macvlan-bridge-setup on UAI hosts
  systemd:
    name: macvlan-bridge-setup
    enabled: yes
    state: restarted
    daemon_reload: yes
  loop:
    "{{ mac0_list }}"
  when: inventory_hostname == item.uai_host
  delegate_to: "{{ inventory_hostname }}"

- name: Add macvlan tmpfiles.d configuration on UAI hosts
  copy:
    src: macvlan.tmpfiles.conf
    dest: /usr/lib/tmpfiles.d/macvlan.conf
    mode: 0644
    owner: root
    group: root
  loop:
    "{{ mac0_list }}"
  when: inventory_hostname == item.uai_host
  delegate_to: "{{ inventory_hostname }}"
