# cray-uas-mgr localization ansible play
# Copyright 2019, Cray Inc. All Rights Reserved.
---
- name: Get current "{{ cray_uas_mgr_configmap }}"
  shell: kubectl get configmap -n services "{{ cray_uas_mgr_configmap }}" -o yaml > "{{ cray_uas_mgr_configmap_file }}"
  run_once: True

- name: Localizing UAS IP
  lineinfile:
    regexp: '^ {4}uas_ip:'
    line: '    uas_ip: {{ gwn_ipv4 }}'
    dest: "{{ cray_uas_mgr_configmap_file }}"
    insertafter: "    # uas_ip: UAS Instance IP"
  when: gwn_ipv4 is defined
  run_once: True

- name: Setting default UAS image
  lineinfile:
    regexp: '^ {6}default_image'
    line: '      default_image: "{{ item }}"'
    dest: "{{ cray_uas_mgr_configmap_file }}"
  when: item is defined
  with_items:
    - "{{ uas_default_img }}"
  run_once: True

- name: Ensure default UAS image is in image list
  lineinfile:
    regexp: '^ {8}- "{{ item }}"'
    line: '        - "{{ item }}"'
    dest: "{{ cray_uas_mgr_configmap_file }}"
    insertafter: "      images:"
  with_items:
    - "{{ uas_default_img }}"
  when: item is defined
  run_once: True

- name: Removing unwanted UAS images
  lineinfile:
    line: '        - "{{ item }}"'
    dest: "{{ cray_uas_mgr_configmap_file }}"
    state: absent
  loop: "{{ delete_uas_imgs }}"
  when: item is defined
  run_once: True

- name: Adding UAS images
  lineinfile:
    regexp: '^ {8}- "{{ item }}"'
    line: '        - "{{ item }}"'
    dest: "{{ cray_uas_mgr_configmap_file }}"
    insertafter: "      images:"
  loop: "{{ add_uas_imgs }}"
  when: item is defined
  run_once: True

- name: Removing unwanted UAS volume mounts (remove mount name)
  lineinfile:
    line: '      - name: {{ item.name }}'
    dest: "{{ cray_uas_mgr_configmap_file }}"
    state: absent
  loop: "{{ delete_uas_volume_mounts }}"
  when: item is defined and item.name is defined
  run_once: True

- name: Removing unwanted UAS volume mounts (remove mount_path)
  lineinfile:
    line: '        mount_path: {{ item.mount_path }}'
    dest: "{{ cray_uas_mgr_configmap_file }}"
    state: absent
  loop: "{{ delete_uas_volume_mounts }}"
  when: item is defined and item.mount_path is defined
  run_once: True

- name: Removing unwanted UAS volume mounts (remove host_path)
  lineinfile:
    line: '        host_path: {{ item.host_path }}'
    dest: "{{ cray_uas_mgr_configmap_file }}"
    state: absent
  loop: "{{ delete_uas_volume_mounts }}"
  when: item is defined and item.host_path is defined
  run_once: True

- name: Removing unwanted UAS volume mounts (remove type)
  lineinfile:
    line: '        type: {{ item.type }} # type for {{ item.name }}'
    dest: "{{ cray_uas_mgr_configmap_file }}"
    state: absent
  loop: "{{ delete_uas_volume_mounts }}"
  when: item is defined and item.type is defined
  run_once: True

- name: Removing unwanted UAS volume mounts (remove config_map)
  lineinfile:
    line: '        config_map: {{ item.config_map }}'
    dest: "{{ cray_uas_mgr_configmap_file }}"
    state: absent
  loop: "{{ delete_uas_volume_mounts }}"
  when: item is defined and item.config_map is defined
  run_once: True

- name: Removing unwanted UAS volume mounts (remove secret_name)
  lineinfile:
    line: '        secret_name: {{ item.secret_name }}'
    dest: "{{ cray_uas_mgr_configmap_file }}"
    state: absent
  loop: "{{ delete_uas_volume_mounts }}"
  when: item is defined and item.secret_name is defined
  run_once: True

- name: Adding UAS volume mounts (add mount name)
  lineinfile:
    regexp: '^ {6}- name: {{ item.name }}'
    line: '      - name: {{ item.name }}'
    dest: "{{ cray_uas_mgr_configmap_file }}"
    insertafter: "    volume_mounts:"
  loop: "{{ add_uas_volume_mounts }}"
  when: item is defined and item.name is defined
  run_once: True

- name: Adding UAS volume mounts (add mount_path)
  lineinfile:
    regexp: '^ {8}mount_path: {{ item.mount_path }}'
    line: '        mount_path: {{ item.mount_path }}'
    dest: "{{ cray_uas_mgr_configmap_file }}"
    insertafter: "      - name: {{ item.name }}"
  loop: "{{ add_uas_volume_mounts }}"
  when: item is defined and item.mount_path is defined
  run_once: True

- name: Adding UAS volume mounts (add host_path)
  lineinfile:
    regexp: '^ {8}host_path: {{ item.host_path }}'
    line: '        host_path: {{ item.host_path }}'
    dest: "{{ cray_uas_mgr_configmap_file }}"
    insertafter: "        mount_path: {{ item.mount_path }}"
  loop: "{{ add_uas_volume_mounts }}"
  when: item is defined and item.host_path is defined
  run_once: True

- name: Adding UAS volume mounts (add type)
  lineinfile:
    regexp: '^ {8}type: {{ item.type }} # type for {{ item.name }}'
    line: '        type: {{ item.type }} # type for {{ item.name }}'
    dest: "{{ cray_uas_mgr_configmap_file }}"
    insertafter: "        host_path: {{ item.host_path }}"
  loop: "{{ add_uas_volume_mounts }}"
  when: item is defined and item.type is defined
  run_once: True

- name: Adding UAS volume mounts (add configmap)
  lineinfile:
    regexp: '^ {8}config_map: {{ item.config_map }}'
    line: '        config_map: {{ item.config_map }}'
    dest: "{{ cray_uas_mgr_configmap_file }}"
    insertafter: "        mount_path: {{ item.mount_path }}"
  loop: "{{ add_uas_volume_mounts }}"
  when: item is defined and item.config_map is defined
  run_once: True

- name: Adding UAS volume mounts (add secret_name)
  lineinfile:
    regexp: '^ {8}secret_name: {{ item.secret_name }}'
    line: '        secret_name: {{ item.secret_name }}'
    dest: "{{ cray_uas_mgr_configmap_file }}"
    insertafter: "        mount_path: {{ item.mount_path }}"
  loop: "{{ add_uas_volume_mounts }}"
  when: item is defined and item.secret_name is defined
  run_once: True

- name: Apply the cray-uas-mgr configmap yaml
  command: kubectl apply -n services -f "{{ cray_uas_mgr_configmap_file }}"
  register: kubectl_result
  changed_when: kubectl_result.stdout.find('created') != -1 or kubectl_result.stdout.find('configured') != -1
  run_once: True

- name: Restart cray-uas-mgr pods
  command: kubectl delete pod -n services -l app=cray-uas-mgr
  run_once: True
